version: '3.8'

services:
  robosats-coordinator:
    image: recksato/robosats:v0.8.2-alpha
    container_name: robosats-coordinator
    restart: always
    ports:
      - "8000:8000"  # RoboSats backend API
    environment:
      # Basic configuration
      SECRET_KEY: "your-secret-key-here-please-change-this"
      DEBUG: "False"
      # Database
      POSTGRES_DB: "robosats"
      POSTGRES_USER: "robosats"
      POSTGRES_PASSWORD: "robosats-password"
      DATABASE_URL: "postgresql://robosats:robosats-password@postgres:5432/robosats"
      # Redis
      REDIS_URL: "redis://redis:6379/0"
      # Network
      ALLOWED_HOSTS: "*"
      CORS_ALLOWED_ORIGINS: "*"
      # LN Node configuration (you'll need to configure this for your Lightning node)
      LND_GRPC_HOST: "lnd"
      LND_GRPC_PORT: "10009"
      LND_MACAROON_PATH: "/lnd/admin.macaroon"
      LND_TLS_CERT_PATH: "/lnd/tls.cert"
    volumes:
      - ./robosats-data:/usr/src/robosats/data
    depends_on:
      - postgres
      - redis
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]

  postgres:
    image: postgres:15-alpine
    container_name: robosats-postgres
    restart: always
    environment:
      POSTGRES_DB: robosats
      POSTGRES_USER: robosats
      POSTGRES_PASSWORD: robosats-password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: robosats-redis
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  # Celery worker for background tasks
  celery:
    image: recksato/robosats:v0.8.2-alpha
    container_name: robosats-celery
    restart: always
    environment:
      SECRET_KEY: "your-secret-key-here-please-change-this"
      DATABASE_URL: "postgresql://robosats:robosats-password@postgres:5432/robosats"
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - postgres
      - redis
    command: ["celery", "-A", "robosats", "worker", "--loglevel=INFO"]

volumes:
  postgres_data:
  redis_data: